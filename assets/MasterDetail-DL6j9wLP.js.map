{"version":3,"file":"MasterDetail-DL6j9wLP.js","sources":["../../website/routes/MasterDetail.tsx?tsr-split=component"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column, RowsChangeData } from '../../src';\nimport type { Direction } from '../../src/types';\nimport { CellExpanderFormatter } from '../components';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: MasterDetail\n});\n\ntype DepartmentRow =\n  | {\n      type: 'MASTER';\n      id: number;\n      department: string;\n      expanded: boolean;\n    }\n  | {\n      type: 'DETAIL';\n      id: number;\n      parentId: number;\n    };\n\ninterface ProductRow {\n  id: number;\n  product: string;\n  description: string;\n  price: string;\n}\n\nfunction createDepartments(): readonly DepartmentRow[] {\n  const departments: DepartmentRow[] = [];\n  for (let i = 1; i < 30; i++) {\n    departments.push({\n      type: 'MASTER',\n      id: i,\n      department: faker.commerce.department(),\n      expanded: false\n    });\n  }\n  return departments;\n}\n\nconst productsMap = new Map<number, readonly ProductRow[]>();\n\nfunction getProducts(parentId: number): readonly ProductRow[] {\n  if (productsMap.has(parentId)) return productsMap.get(parentId)!;\n  const products: ProductRow[] = [];\n  for (let i = 0; i < 20; i++) {\n    products.push({\n      id: i,\n      product: faker.commerce.productName(),\n      description: faker.commerce.productDescription(),\n      price: faker.commerce.price()\n    });\n  }\n  productsMap.set(parentId, products);\n  return products;\n}\n\nconst productColumns: readonly Column<ProductRow>[] = [\n  { key: 'id', name: 'ID', width: 35 },\n  { key: 'product', name: 'Product' },\n  { key: 'description', name: 'Description' },\n  { key: 'price', name: 'Price' }\n];\n\nfunction MasterDetail() {\n  const direction = useDirection();\n\n  const columns = useMemo((): readonly Column<DepartmentRow>[] => {\n    return [\n      {\n        key: 'expanded',\n        name: '',\n        minWidth: 30,\n        width: 30,\n        colSpan(args) {\n          return args.type === 'ROW' && args.row.type === 'DETAIL' ? 3 : undefined;\n        },\n        cellClass(row) {\n          return row.type === 'DETAIL'\n            ? css`\n                padding: 24px;\n              `\n            : undefined;\n        },\n        renderCell({ row, tabIndex, onRowChange }) {\n          if (row.type === 'DETAIL') {\n            return <ProductGrid parentId={row.parentId} direction={direction} />;\n          }\n\n          return (\n            <CellExpanderFormatter\n              expanded={row.expanded}\n              tabIndex={tabIndex}\n              onCellExpand={() => {\n                onRowChange({ ...row, expanded: !row.expanded });\n              }}\n            />\n          );\n        }\n      },\n      { key: 'id', name: 'ID', width: 35 },\n      { key: 'department', name: 'Department' }\n    ];\n  }, [direction]);\n  const [rows, setRows] = useState(createDepartments);\n\n  function onRowsChange(rows: DepartmentRow[], { indexes }: RowsChangeData<DepartmentRow>) {\n    const row = rows[indexes[0]];\n    if (row.type === 'MASTER') {\n      if (row.expanded) {\n        rows.splice(indexes[0] + 1, 0, {\n          type: 'DETAIL',\n          id: row.id + 100,\n          parentId: row.id\n        });\n      } else {\n        rows.splice(indexes[0] + 1, 1);\n      }\n      setRows(rows);\n    }\n  }\n\n  return (\n    <DataGrid\n      aria-label=\"Master Detail Example\"\n      rowKeyGetter={rowKeyGetter}\n      columns={columns}\n      rows={rows}\n      onRowsChange={onRowsChange}\n      headerRowHeight={45}\n      rowHeight={(row) => (row.type === 'DETAIL' ? 300 : 45)}\n      className=\"fill-grid\"\n      enableVirtualization={false}\n      direction={direction}\n      onCellKeyDown={(_, event) => {\n        if (event.isDefaultPrevented()) {\n          // skip parent grid keyboard navigation if nested grid handled it\n          event.preventGridDefault();\n        }\n      }}\n    />\n  );\n}\n\nfunction ProductGrid({ parentId, direction }: { parentId: number; direction: Direction }) {\n  const products = getProducts(parentId);\n\n  return (\n    <DataGrid\n      rows={products}\n      columns={productColumns}\n      rowKeyGetter={rowKeyGetter}\n      style={{ blockSize: 250 }}\n      direction={direction}\n    />\n  );\n}\n\nfunction rowKeyGetter(row: DepartmentRow | ProductRow) {\n  return row.id;\n}\n"],"names":["createDepartments","departments","i","push","type","id","department","faker","commerce","expanded","productsMap","Map","getProducts","parentId","has","get","products","product","productName","description","productDescription","price","set","productColumns","key","name","width","ProductGrid","direction","DataGrid","rows","columns","rowKeyGetter","style","blockSize","row","SplitComponent","useDirection","useMemo","minWidth","colSpan","args","undefined","cellClass","renderCell","tabIndex","onRowChange","jsx","CellExpanderFormatter","onCellExpand","setRows","useState","onRowsChange","indexes","splice","headerRowHeight","rowHeight","className","enableVirtualization","onCellKeyDown","_","event","isDefaultPrevented","preventGridDefault"],"mappings":"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"}