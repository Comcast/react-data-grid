{"version":3,"file":"MasterDetail-C_fPEv9G.js","names":["useMemo","useState","faker","css","DataGrid","Column","RowsChangeData","Direction","CellExpanderFormatter","useDirection","Route","DepartmentRow","type","id","department","expanded","parentId","ProductRow","product","description","price","createDepartments","departments","i","push","commerce","productsMap","Map","getProducts","has","get","products","productName","productDescription","set","productColumns","key","name","width","MasterDetail","direction","columns","minWidth","colSpan","args","row","undefined","cellClass","renderCell","tabIndex","onRowChange","rows","setRows","onRowsChange","indexes","splice","rowKeyGetter","_","event","isDefaultPrevented","preventGridDefault","ProductGrid","blockSize","component"],"sources":["../../website/routes/MasterDetail.wyw-in-js.css","../../website/routes/MasterDetail.tsx?tsr-split=component"],"sourcesContent":[".c1e3rre1 {\n                padding: 24px;\n              }\n\n","import { useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column, RowsChangeData } from '../../src';\nimport type { Direction } from '../../src/types';\nimport { CellExpanderFormatter } from '../components';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: MasterDetail\n});\n\ntype DepartmentRow =\n  | {\n      type: 'MASTER';\n      id: number;\n      department: string;\n      expanded: boolean;\n    }\n  | {\n      type: 'DETAIL';\n      id: number;\n      parentId: number;\n    };\n\ninterface ProductRow {\n  id: number;\n  product: string;\n  description: string;\n  price: string;\n}\n\nfunction createDepartments(): readonly DepartmentRow[] {\n  const departments: DepartmentRow[] = [];\n  for (let i = 1; i < 30; i++) {\n    departments.push({\n      type: 'MASTER',\n      id: i,\n      department: faker.commerce.department(),\n      expanded: false\n    });\n  }\n  return departments;\n}\n\nconst productsMap = new Map<number, readonly ProductRow[]>();\n\nfunction getProducts(parentId: number): readonly ProductRow[] {\n  if (productsMap.has(parentId)) return productsMap.get(parentId)!;\n  const products: ProductRow[] = [];\n  for (let i = 0; i < 20; i++) {\n    products.push({\n      id: i,\n      product: faker.commerce.productName(),\n      description: faker.commerce.productDescription(),\n      price: faker.commerce.price()\n    });\n  }\n  productsMap.set(parentId, products);\n  return products;\n}\n\nconst productColumns: readonly Column<ProductRow>[] = [\n  { key: 'id', name: 'ID', width: 35 },\n  { key: 'product', name: 'Product' },\n  { key: 'description', name: 'Description' },\n  { key: 'price', name: 'Price' }\n];\n\nfunction MasterDetail() {\n  const direction = useDirection();\n\n  const columns = useMemo((): readonly Column<DepartmentRow>[] => {\n    return [\n      {\n        key: 'expanded',\n        name: '',\n        minWidth: 30,\n        width: 30,\n        colSpan(args) {\n          return args.type === 'ROW' && args.row.type === 'DETAIL' ? 3 : undefined;\n        },\n        cellClass(row) {\n          return row.type === 'DETAIL'\n            ? css`\n                padding: 24px;\n              `\n            : undefined;\n        },\n        renderCell({ row, tabIndex, onRowChange }) {\n          if (row.type === 'DETAIL') {\n            return <ProductGrid parentId={row.parentId} direction={direction} />;\n          }\n\n          return (\n            <CellExpanderFormatter\n              expanded={row.expanded}\n              tabIndex={tabIndex}\n              onCellExpand={() => {\n                onRowChange({ ...row, expanded: !row.expanded });\n              }}\n            />\n          );\n        }\n      },\n      { key: 'id', name: 'ID', width: 35 },\n      { key: 'department', name: 'Department' }\n    ];\n  }, [direction]);\n  const [rows, setRows] = useState(createDepartments);\n\n  function onRowsChange(rows: DepartmentRow[], { indexes }: RowsChangeData<DepartmentRow>) {\n    const row = rows[indexes[0]];\n    if (row.type === 'MASTER') {\n      if (row.expanded) {\n        rows.splice(indexes[0] + 1, 0, {\n          type: 'DETAIL',\n          id: row.id + 100,\n          parentId: row.id\n        });\n      } else {\n        rows.splice(indexes[0] + 1, 1);\n      }\n      setRows(rows);\n    }\n  }\n\n  return (\n    <DataGrid\n      aria-label=\"Master Detail Example\"\n      rowKeyGetter={rowKeyGetter}\n      columns={columns}\n      rows={rows}\n      onRowsChange={onRowsChange}\n      headerRowHeight={45}\n      rowHeight={(row) => (row.type === 'DETAIL' ? 300 : 45)}\n      className=\"fill-grid\"\n      enableVirtualization={false}\n      direction={direction}\n      onCellKeyDown={(_, event) => {\n        if (event.isDefaultPrevented()) {\n          // skip parent grid keyboard navigation if nested grid handled it\n          event.preventGridDefault();\n        }\n      }}\n    />\n  );\n}\n\nfunction ProductGrid({ parentId, direction }: { parentId: number; direction: Direction }) {\n  const products = getProducts(parentId);\n\n  return (\n    <DataGrid\n      rows={products}\n      columns={productColumns}\n      rowKeyGetter={rowKeyGetter}\n      style={{ blockSize: 250 }}\n      direction={direction}\n    />\n  );\n}\n\nfunction rowKeyGetter(row: DepartmentRow | ProductRow) {\n  return row.id;\n}\n"],"mappings":"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"}