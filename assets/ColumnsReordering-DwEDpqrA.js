import{u as R,r as o,j as u}from"./index-DX3q_1IZ.js";import{D as O}from"./DataGrid-DnjIc1rW.js";function T(){const a=[];for(let r=1;r<500;r++)a.push({id:r,task:`Task ${r}`,complete:Math.min(100,Math.round(Math.random()*110)),priority:["Critical","High","Medium","Low"][Math.round(Math.random()*3)],issueType:["Bug","Improvement","Epic","Story"][Math.round(Math.random()*3)]});return a}const l=[{key:"id",name:"ID",width:80},{key:"task",name:"Title",resizable:!0,sortable:!0,draggable:!0},{key:"priority",name:"Priority",resizable:!0,sortable:!0,draggable:!0},{key:"issueType",name:"Issue Type",resizable:!0,sortable:!0,draggable:!0},{key:"complete",name:"% Complete",resizable:!0,sortable:!0,draggable:!0}],b=l.map((a,r)=>r),z=function(){const r=R(),[c]=o.useState(T),[p,C]=o.useState(b),[i,g]=o.useState([]),k=o.useCallback(e=>{g(e.slice(-1))},[]),[w,h]=o.useState(()=>new Map),f=o.useMemo(()=>p.map(e=>l[e]),[p]),M=o.useMemo(()=>{if(i.length===0)return c;const{columnKey:e,direction:m}=i[0];let t=[...c];switch(e){case"task":case"priority":case"issueType":t=t.sort((s,n)=>s[e].localeCompare(n[e]));break;case"complete":t=t.sort((s,n)=>s[e]-n[e]);break}return m==="DESC"?t.reverse():t},[c,i]);function x(e,m){C(t=>{const s=t.findIndex(d=>l[d].key===e),n=t.findIndex(d=>l[d].key===m),I=t[s],y=t.toSpliced(s,1);return y.splice(n,0,I),y})}function S(){C(b),h(new Map)}return u.jsxs(u.Fragment,{children:[u.jsx("button",{type:"button",onClick:S,style:{width:150,marginBottom:16},children:"Reset Columns"}),u.jsx(O,{columns:f,rows:M,sortColumns:i,onSortColumnsChange:k,direction:r,defaultColumnOptions:{width:"1fr"},onColumnsReorder:x,columnWidths:w,onColumnWidthsChange:h})]})};export{z as component};
//# sourceMappingURL=ColumnsReordering-DwEDpqrA.js.map
