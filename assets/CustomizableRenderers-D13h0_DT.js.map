{"version":3,"file":"CustomizableRenderers-D13h0_DT.js","names":["useMemo","useState","css","Row","BaseRow","Cell","DataGrid","SelectColumn","textEditor","CellRendererProps","Column","RenderCheckboxProps","RenderRowProps","RenderSortStatusProps","SortColumn","useDirection","Route","selectCellClassname","sortPriorityClassname","id","task","complete","priority","issueType","createRows","rows","i","push","Math","min","round","random","columns","headerCellClass","cellClass","key","name","width","renderEditCell","sortable","CustomizableRenderers","direction","setRows","sortColumns","setSortColumns","selectedRows","setSelectedRows","ReadonlySet","Set","sortedRows","length","toSorted","a","b","sort","comparator","getComparator","columnKey","compResult","rowKeyGetter","renderSortStatus","renderCheckbox","renderCell","renderRow","onChange","indeterminate","props","handleChange","e","React","ChangeEvent","HTMLInputElement","target","checked","nativeEvent","MouseEvent","shiftKey","el","sortDirection","undefined","cellStyle","CSSProperties","color","Key","style","column","row","rowStyle","Comparator","sortColumn","localeCompare","Error","component"],"sources":["../../website/routes/CustomizableRenderers.wyw-in-js.css","../../website/routes/CustomizableRenderers.tsx?tsr-split=component"],"sourcesContent":[".sj542kt {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > input {\n    margin: 0;\n  }\n}\n\n.s1k9cqly {\n  color: grey;\n  margin-left: 2px;\n}\n\n","import { useMemo, useState } from 'react';\nimport { css } from '@linaria/core';\n\nimport { Row as BaseRow, Cell, DataGrid, SelectColumn, textEditor } from '../../src';\nimport type {\n  CellRendererProps,\n  Column,\n  RenderCheckboxProps,\n  RenderRowProps,\n  RenderSortStatusProps,\n  SortColumn\n} from '../../src';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: CustomizableRenderers\n});\n\nconst selectCellClassname = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > input {\n    margin: 0;\n  }\n`;\n\nconst sortPriorityClassname = css`\n  color: grey;\n  margin-left: 2px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  complete: number;\n  priority: string;\n  issueType: string;\n}\n\nfunction createRows(): readonly Row[] {\n  const rows: Row[] = [];\n\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.round(Math.random() * 3)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.round(Math.random() * 3)]\n    });\n  }\n\n  return rows;\n}\n\nconst columns: readonly Column<Row>[] = [\n  {\n    ...SelectColumn,\n    headerCellClass: selectCellClassname,\n    cellClass: selectCellClassname\n  },\n  {\n    key: 'id',\n    name: 'ID',\n    width: 80\n  },\n  {\n    key: 'task',\n    name: 'Title',\n    renderEditCell: textEditor,\n    sortable: true\n  },\n  {\n    key: 'priority',\n    name: 'Priority',\n    sortable: true\n  },\n  {\n    key: 'issueType',\n    name: 'Issue Type',\n    sortable: true\n  },\n  {\n    key: 'complete',\n    name: '% Complete',\n    sortable: true\n  }\n];\n\nfunction CustomizableRenderers() {\n  const direction = useDirection();\n  const [rows, setRows] = useState(createRows);\n  const [sortColumns, setSortColumns] = useState<readonly SortColumn[]>([]);\n  const [selectedRows, setSelectedRows] = useState((): ReadonlySet<number> => new Set());\n\n  const sortedRows = useMemo((): readonly Row[] => {\n    if (sortColumns.length === 0) return rows;\n\n    return rows.toSorted((a, b) => {\n      for (const sort of sortColumns) {\n        const comparator = getComparator(sort.columnKey);\n        const compResult = comparator(a, b);\n        if (compResult !== 0) {\n          return sort.direction === 'ASC' ? compResult : -compResult;\n        }\n      }\n      return 0;\n    });\n  }, [rows, sortColumns]);\n\n  return (\n    <DataGrid\n      aria-label=\"Customizable Renderers Example\"\n      className=\"fill-grid\"\n      columns={columns}\n      rows={sortedRows}\n      rowKeyGetter={rowKeyGetter}\n      onRowsChange={setRows}\n      sortColumns={sortColumns}\n      onSortColumnsChange={setSortColumns}\n      selectedRows={selectedRows}\n      onSelectedRowsChange={setSelectedRows}\n      renderers={{ renderSortStatus, renderCheckbox, renderCell, renderRow }}\n      direction={direction}\n    />\n  );\n}\n\nfunction renderCheckbox({ onChange, indeterminate, ...props }: RenderCheckboxProps) {\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(e.target.checked, (e.nativeEvent as MouseEvent).shiftKey);\n  }\n\n  return (\n    <input\n      ref={(el) => {\n        if (el) {\n          el.indeterminate = indeterminate === true;\n        }\n      }}\n      type=\"checkbox\"\n      {...props}\n      onChange={handleChange}\n    />\n  );\n}\n\nfunction renderSortStatus({ sortDirection, priority }: RenderSortStatusProps) {\n  return (\n    <>\n      {sortDirection !== undefined ? (sortDirection === 'ASC' ? '\\u2B9D' : '\\u2B9F') : null}\n      <span className={sortPriorityClassname}>{priority}</span>\n    </>\n  );\n}\n\nconst cellStyle: React.CSSProperties = { color: 'red' };\n\nfunction renderCell(key: React.Key, props: CellRendererProps<Row, unknown>) {\n  const style =\n    props.column.key === 'priority' && props.row.priority === 'Critical' ? cellStyle : undefined;\n\n  return <Cell key={key} {...props} style={style} />;\n}\n\nconst rowStyle: React.CSSProperties = { color: 'green' };\n\nfunction renderRow(key: React.Key, props: RenderRowProps<Row>) {\n  const style = props.row.complete === 100 ? rowStyle : undefined;\n\n  return <BaseRow key={key} {...props} style={style} />;\n}\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\ntype Comparator = (a: Row, b: Row) => number;\n\nfunction getComparator(sortColumn: string): Comparator {\n  switch (sortColumn) {\n    case 'task':\n    case 'priority':\n    case 'issueType':\n      return (a, b) => {\n        return a[sortColumn].localeCompare(b[sortColumn]);\n      };\n    case 'complete':\n      return (a, b) => {\n        return a[sortColumn] - b[sortColumn];\n      };\n    default:\n      throw new Error(`unsupported sortColumn: \"${sortColumn}\"`);\n  }\n}\n"],"mappings":"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"}