{"version":3,"file":"HeaderFilters-C7OHcSY7.js","sources":["../../website/routes/HeaderFilters.tsx?tsr-split=component"],"sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { createFileRoute } from '@tanstack/react-router';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column, RenderHeaderCellProps } from '../../src';\nimport type { Omit } from '../../src/types';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute('/HeaderFilters')({\n  component: HeaderFilters\n});\n\nconst rootClassname = css`\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  gap: 10px;\n\n  > .rdg {\n    flex: 1;\n  }\n`;\n\nconst toolbarClassname = css`\n  text-align: end;\n`;\n\nconst filterColumnClassName = 'filter-cell';\n\nconst filterContainerClassname = css`\n  .${filterColumnClassName} {\n    line-height: 35px;\n    padding: 0;\n\n    > div {\n      padding-block: 0;\n      padding-inline: 8px;\n\n      &:first-child {\n        border-block-end: 1px solid var(--rdg-border-color);\n      }\n    }\n  }\n`;\n\nconst filterClassname = css`\n  inline-size: 100%;\n  padding: 4px;\n  font-size: 14px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  priority: string;\n  issueType: string;\n  developer: string;\n  complete: number;\n}\n\ninterface Filter extends Omit<Row, 'id' | 'complete'> {\n  complete: number | undefined;\n  enabled: boolean;\n}\n\n// Context is needed to read filter values otherwise columns are\n// re-created when filters are changed and filter loses focus\nconst FilterContext = createContext<Filter | undefined>(undefined);\n\nfunction inputStopPropagation(event: React.KeyboardEvent<HTMLInputElement>) {\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction selectStopPropagation(event: React.KeyboardEvent<HTMLSelectElement>) {\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction HeaderFilters() {\n  const direction = useDirection();\n  const [rows] = useState(createRows);\n  const [filters, setFilters] = useState(\n    (): Filter => ({\n      task: '',\n      priority: 'Critical',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    })\n  );\n\n  const developerOptions = useMemo(\n    () =>\n      Array.from(new Set(rows.map((r) => r.developer))).map((d) => ({\n        label: d,\n        value: d\n      })),\n    [rows]\n  );\n\n  const columns = useMemo((): readonly Column<Row>[] => {\n    return [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 50\n      },\n      {\n        key: 'task',\n        name: 'Title',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.task}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    task: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'priority',\n        name: 'Priority',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.priority}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    priority: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Critical\">Critical</option>\n                <option value=\"High\">High</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Low\">Low</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'issueType',\n        name: 'Issue Type',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.issueType}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    issueType: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Bug\">Bug</option>\n                <option value=\"Improvement\">Improvement</option>\n                <option value=\"Epic\">Epic</option>\n                <option value=\"Story\">Story</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'developer',\n        name: 'Developer',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.developer}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    developer: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n                list=\"developers\"\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'complete',\n        name: '% Complete',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                type=\"number\"\n                className={filterClassname}\n                value={filters.complete}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    complete: Number.isFinite(e.target.valueAsNumber)\n                      ? e.target.valueAsNumber\n                      : undefined\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      }\n    ];\n  }, []);\n\n  const filteredRows = useMemo(() => {\n    return rows.filter((r) => {\n      return (\n        (filters.task ? r.task.includes(filters.task) : true) &&\n        (filters.priority !== 'All' ? r.priority === filters.priority : true) &&\n        (filters.issueType !== 'All' ? r.issueType === filters.issueType : true) &&\n        (filters.developer\n          ? r.developer.toLowerCase().startsWith(filters.developer.toLowerCase())\n          : true) &&\n        (filters.complete !== undefined ? r.complete >= filters.complete : true)\n      );\n    });\n  }, [rows, filters]);\n\n  function clearFilters() {\n    setFilters({\n      task: '',\n      priority: 'All',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    });\n  }\n\n  function toggleFilters() {\n    setFilters((filters) => ({\n      ...filters,\n      enabled: !filters.enabled\n    }));\n  }\n\n  return (\n    <div className={rootClassname}>\n      <div className={toolbarClassname}>\n        <button type=\"button\" onClick={toggleFilters}>\n          Toggle Filters\n        </button>{' '}\n        <button type=\"button\" onClick={clearFilters}>\n          Clear Filters\n        </button>\n      </div>\n      <FilterContext value={filters}>\n        <DataGrid\n          className={filters.enabled ? filterContainerClassname : undefined}\n          columns={columns}\n          rows={filteredRows}\n          headerRowHeight={filters.enabled ? 70 : undefined}\n          direction={direction}\n          style={{\n            scrollbarGutter: 'stable'\n          }}\n        />\n      </FilterContext>\n      <datalist id=\"developers\">\n        {developerOptions.map(({ label, value }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nfunction FilterRenderer<R>({\n  tabIndex,\n  column,\n  children\n}: RenderHeaderCellProps<R> & {\n  children: (args: { tabIndex: number; filters: Filter }) => React.ReactElement;\n}) {\n  const filters = useContext(FilterContext)!;\n  return (\n    <>\n      <div>{column.name}</div>\n      {filters.enabled && <div>{children({ tabIndex, filters })}</div>}\n    </>\n  );\n}\n\nfunction createRows() {\n  const rows: Row[] = [];\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.floor(Math.random() * 4)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.floor(Math.random() * 4)],\n      developer: faker.person.fullName()\n    });\n  }\n  return rows;\n}\n"],"names":["rootClassname","css","toolbarClassname","filterColumnClassName","filterContainerClassname","filterClassname","FilterContext","createContext","undefined","inputStopPropagation","event","includes","key","stopPropagation","selectStopPropagation","FilterRenderer","tabIndex","column","children","filters","useContext","jsxs","Fragment","jsx","name","enabled","createRows","rows","i","push","id","task","complete","Math","min","round","random","priority","floor","issueType","developer","faker","person","fullName","SplitComponent","direction","useDirection","useState","setFilters","developerOptions","useMemo","Array","from","Set","map","r","d","label","value","columns","width","headerCellClass","renderHeaderCell","p","rest","className","onChange","e","target","onKeyDown","list","type","Number","isFinite","valueAsNumber","filteredRows","filter","toLowerCase","startsWith","clearFilters","toggleFilters","onClick","DataGrid","headerRowHeight","style","scrollbarGutter"],"mappings":"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"}