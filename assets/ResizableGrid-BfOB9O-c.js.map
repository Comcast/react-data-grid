{"version":3,"file":"ResizableGrid-BfOB9O-c.js","names":["DataGrid","Column","renderCoordinates","useDirection","Route","Row","rows","Array","from","length","_","i","columns","key","String","push","name","renderCell","ResizableGrid","direction","resize","component"],"sources":["../../website/routes/ResizableGrid.tsx?tsr-split=component"],"sourcesContent":["import { DataGrid } from '../../src';\nimport type { Column } from '../../src';\nimport { renderCoordinates } from '../renderers';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: ResizableGrid\n});\n\ntype Row = number;\nconst rows: readonly Row[] = Array.from({ length: 100 }, (_, i) => i);\n\nconst columns: Column<Row>[] = [];\n\nfor (let i = 0; i < 50; i++) {\n  const key = String(i);\n  columns.push({\n    key,\n    name: key,\n    renderCell: renderCoordinates\n  });\n}\n\nfunction ResizableGrid() {\n  const direction = useDirection();\n\n  return (\n    <DataGrid\n      aria-label=\"Resizable Grid Example\"\n      columns={columns}\n      rows={rows}\n      className=\"fill-grid\"\n      style={{ resize: 'both' }}\n      direction={direction}\n    />\n  );\n}\n"],"mappings":"qHAUA,MAAMM,EAAuBC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,EAAGC,EAAGC,IAAMA,GAE7DC,EAAyB,EAAE,CAEjC,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAME,EAAMC,OAAOH,GACnBC,EAAQG,KAAK,CACXF,MACAG,KAAMH,EACNI,WAAYf,EACb,CACH,CAEA,SAASgB,GAAgB,CACvB,IAAMC,EAAYhB,IAElB,OACE,EAAA,EAAA,KAAC,EAAA,CACC,aAAW,yBACFS,UACHN,OACN,UAAU,YACV,MAAO,CAAEc,OAAQ,OAAQ,CACdD,aAGjB"}