{"version":3,"file":"CustomizableRenderers-BG5nFAIB.js","sources":["../../website/routes/CustomizableRenderers.tsx?tsr-split=component"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport { css } from '@linaria/core';\n\nimport { Row as BaseRow, Cell, DataGrid, SelectColumn, textEditor } from '../../src';\nimport type {\n  CellRendererProps,\n  Column,\n  RenderCheckboxProps,\n  RenderRowProps,\n  RenderSortStatusProps,\n  SortColumn\n} from '../../src';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: CustomizableRenderers\n});\n\nconst selectCellClassname = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > input {\n    margin: 0;\n  }\n`;\n\nconst sortPriorityClassname = css`\n  color: grey;\n  margin-left: 2px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  complete: number;\n  priority: string;\n  issueType: string;\n}\n\nfunction createRows(): readonly Row[] {\n  const rows: Row[] = [];\n\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.round(Math.random() * 3)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.round(Math.random() * 3)]\n    });\n  }\n\n  return rows;\n}\n\nconst columns: readonly Column<Row>[] = [\n  {\n    ...SelectColumn,\n    headerCellClass: selectCellClassname,\n    cellClass: selectCellClassname\n  },\n  {\n    key: 'id',\n    name: 'ID',\n    width: 80\n  },\n  {\n    key: 'task',\n    name: 'Title',\n    renderEditCell: textEditor,\n    sortable: true\n  },\n  {\n    key: 'priority',\n    name: 'Priority',\n    sortable: true\n  },\n  {\n    key: 'issueType',\n    name: 'Issue Type',\n    sortable: true\n  },\n  {\n    key: 'complete',\n    name: '% Complete',\n    sortable: true\n  }\n];\n\nfunction CustomizableRenderers() {\n  const direction = useDirection();\n  const [rows, setRows] = useState(createRows);\n  const [sortColumns, setSortColumns] = useState<readonly SortColumn[]>([]);\n  const [selectedRows, setSelectedRows] = useState((): ReadonlySet<number> => new Set());\n\n  const sortedRows = useMemo((): readonly Row[] => {\n    if (sortColumns.length === 0) return rows;\n\n    return rows.toSorted((a, b) => {\n      for (const sort of sortColumns) {\n        const comparator = getComparator(sort.columnKey);\n        const compResult = comparator(a, b);\n        if (compResult !== 0) {\n          return sort.direction === 'ASC' ? compResult : -compResult;\n        }\n      }\n      return 0;\n    });\n  }, [rows, sortColumns]);\n\n  return (\n    <DataGrid\n      className=\"fill-grid\"\n      columns={columns}\n      rows={sortedRows}\n      rowKeyGetter={rowKeyGetter}\n      onRowsChange={setRows}\n      sortColumns={sortColumns}\n      onSortColumnsChange={setSortColumns}\n      selectedRows={selectedRows}\n      onSelectedRowsChange={setSelectedRows}\n      renderers={{ renderSortStatus, renderCheckbox, renderCell, renderRow }}\n      direction={direction}\n    />\n  );\n}\n\nfunction renderCheckbox({ onChange, indeterminate, ...props }: RenderCheckboxProps) {\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(e.target.checked, (e.nativeEvent as MouseEvent).shiftKey);\n  }\n\n  return (\n    <input\n      ref={(el) => {\n        if (el) {\n          el.indeterminate = indeterminate === true;\n        }\n      }}\n      type=\"checkbox\"\n      {...props}\n      onChange={handleChange}\n    />\n  );\n}\n\nfunction renderSortStatus({ sortDirection, priority }: RenderSortStatusProps) {\n  return (\n    <>\n      {sortDirection !== undefined ? (sortDirection === 'ASC' ? '\\u2B9D' : '\\u2B9F') : null}\n      <span className={sortPriorityClassname}>{priority}</span>\n    </>\n  );\n}\n\nconst cellStyle: React.CSSProperties = { color: 'red' };\n\nfunction renderCell(key: React.Key, props: CellRendererProps<Row, unknown>) {\n  const style =\n    props.column.key === 'priority' && props.row.priority === 'Critical' ? cellStyle : undefined;\n\n  return <Cell key={key} {...props} style={style} />;\n}\n\nconst rowStyle: React.CSSProperties = { color: 'green' };\n\nfunction renderRow(key: React.Key, props: RenderRowProps<Row>) {\n  const style = props.row.complete === 100 ? rowStyle : undefined;\n\n  return <BaseRow key={key} {...props} style={style} />;\n}\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\ntype Comparator = (a: Row, b: Row) => number;\n\nfunction getComparator(sortColumn: string): Comparator {\n  switch (sortColumn) {\n    case 'task':\n    case 'priority':\n    case 'issueType':\n      return (a, b) => {\n        return a[sortColumn].localeCompare(b[sortColumn]);\n      };\n    case 'complete':\n      return (a, b) => {\n        return a[sortColumn] - b[sortColumn];\n      };\n    default:\n      throw new Error(`unsupported sortColumn: \"${sortColumn}\"`);\n  }\n}\n"],"names":["selectCellClassname","css","sortPriorityClassname","createRows","rows","i","push","id","task","complete","Math","min","round","random","priority","issueType","columns","SelectColumn","headerCellClass","cellClass","key","name","width","renderEditCell","textEditor","sortable","renderCheckbox","onChange","indeterminate","props","handleChange","e","target","checked","nativeEvent","shiftKey","jsx","ref","el","type","renderSortStatus","sortDirection","undefined","className","cellStyle","color","renderCell","style","column","row","Cell","rowStyle","renderRow","BaseRow","rowKeyGetter","getComparator","sortColumn","a","b","localeCompare","Error","SplitComponent","direction","useDirection","setRows","useState","sortColumns","setSortColumns","selectedRows","setSelectedRows","Set","sortedRows","useMemo","length","toSorted","sort","compResult","columnKey","DataGrid","onRowsChange","onSortColumnsChange","onSelectedRowsChange","renderers"],"mappings":"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"}