{"version":3,"file":"HeaderFilters-hGERdr0y.js","names":["createContext","useContext","useMemo","useState","faker","css","DataGrid","Column","RenderHeaderCellProps","Omit","useDirection","Route","rootClassname","toolbarClassname","filterColumnClassName","filterContainerClassname","filterClassname","Row","id","task","priority","issueType","developer","complete","Filter","enabled","FilterContext","undefined","inputStopPropagation","event","React","KeyboardEvent","HTMLInputElement","includes","key","stopPropagation","selectStopPropagation","HTMLSelectElement","HeaderFilters","direction","rows","createRows","filters","setFilters","developerOptions","Array","from","Set","map","r","d","label","value","columns","name","width","headerCellClass","renderHeaderCell","p","rest","e","target","Number","isFinite","valueAsNumber","filteredRows","filter","toLowerCase","startsWith","clearFilters","toggleFilters","scrollbarGutter","FilterRenderer","tabIndex","column","children","R","args","ReactElement","i","push","Math","min","round","random","floor","person","fullName","component"],"sources":["../../website/routes/HeaderFilters.wyw-in-js.css","../../website/routes/HeaderFilters.tsx?tsr-split=component"],"sourcesContent":[".r1a6zgxl {\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  gap: 10px;\n\n  > .rdg {\n    flex: 1;\n  }\n}\n\n.t13nrsgy {\n  text-align: end;\n}\n\n.fjcbdxy {\n  .filter-cell {\n    line-height: 35px;\n    padding: 0;\n\n    > div {\n      padding-block: 0;\n      padding-inline: 8px;\n\n      &:first-child {\n        border-block-end: var(--rdg-border-width) solid var(--rdg-border-color);\n      }\n    }\n  }\n}\n\n.ffjqh3z {\n  inline-size: 100%;\n  padding: 4px;\n  font-size: 14px;\n}\n\n","import { createContext, useContext, useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column, RenderHeaderCellProps } from '../../src';\nimport type { Omit } from '../../src/types';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: HeaderFilters\n});\n\nconst rootClassname = css`\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  gap: 10px;\n\n  > .rdg {\n    flex: 1;\n  }\n`;\n\nconst toolbarClassname = css`\n  text-align: end;\n`;\n\nconst filterColumnClassName = 'filter-cell';\n\nconst filterContainerClassname = css`\n  .${filterColumnClassName} {\n    line-height: 35px;\n    padding: 0;\n\n    > div {\n      padding-block: 0;\n      padding-inline: 8px;\n\n      &:first-child {\n        border-block-end: var(--rdg-border-width) solid var(--rdg-border-color);\n      }\n    }\n  }\n`;\n\nconst filterClassname = css`\n  inline-size: 100%;\n  padding: 4px;\n  font-size: 14px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  priority: string;\n  issueType: string;\n  developer: string;\n  complete: number;\n}\n\ninterface Filter extends Omit<Row, 'id' | 'complete'> {\n  complete: number | undefined;\n  enabled: boolean;\n}\n\n// Context is needed to read filter values otherwise columns are\n// re-created when filters are changed and filter loses focus\nconst FilterContext = createContext<Filter | undefined>(undefined);\n\nfunction inputStopPropagation(event: React.KeyboardEvent<HTMLInputElement>) {\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction selectStopPropagation(event: React.KeyboardEvent<HTMLSelectElement>) {\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction HeaderFilters() {\n  const direction = useDirection();\n  const [rows] = useState(createRows);\n  const [filters, setFilters] = useState(\n    (): Filter => ({\n      task: '',\n      priority: 'Critical',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    })\n  );\n\n  const developerOptions = useMemo(\n    () =>\n      Array.from(new Set(rows.map((r) => r.developer))).map((d) => ({\n        label: d,\n        value: d\n      })),\n    [rows]\n  );\n\n  const columns = useMemo((): readonly Column<Row>[] => {\n    return [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 50\n      },\n      {\n        key: 'task',\n        name: 'Title',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.task}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    task: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'priority',\n        name: 'Priority',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.priority}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    priority: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Critical\">Critical</option>\n                <option value=\"High\">High</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Low\">Low</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'issueType',\n        name: 'Issue Type',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.issueType}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    issueType: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Bug\">Bug</option>\n                <option value=\"Improvement\">Improvement</option>\n                <option value=\"Epic\">Epic</option>\n                <option value=\"Story\">Story</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'developer',\n        name: 'Developer',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.developer}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    developer: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n                list=\"developers\"\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'complete',\n        name: '% Complete',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                type=\"number\"\n                className={filterClassname}\n                value={filters.complete}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    complete: Number.isFinite(e.target.valueAsNumber)\n                      ? e.target.valueAsNumber\n                      : undefined\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      }\n    ];\n  }, []);\n\n  const filteredRows = useMemo(() => {\n    return rows.filter((r) => {\n      return (\n        (filters.task ? r.task.includes(filters.task) : true) &&\n        (filters.priority !== 'All' ? r.priority === filters.priority : true) &&\n        (filters.issueType !== 'All' ? r.issueType === filters.issueType : true) &&\n        (filters.developer\n          ? r.developer.toLowerCase().startsWith(filters.developer.toLowerCase())\n          : true) &&\n        (filters.complete !== undefined ? r.complete >= filters.complete : true)\n      );\n    });\n  }, [rows, filters]);\n\n  function clearFilters() {\n    setFilters({\n      task: '',\n      priority: 'All',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    });\n  }\n\n  function toggleFilters() {\n    setFilters((filters) => ({\n      ...filters,\n      enabled: !filters.enabled\n    }));\n  }\n\n  return (\n    <div className={rootClassname}>\n      <div className={toolbarClassname}>\n        <button type=\"button\" onClick={toggleFilters}>\n          Toggle Filters\n        </button>{' '}\n        <button type=\"button\" onClick={clearFilters}>\n          Clear Filters\n        </button>\n      </div>\n      <FilterContext value={filters}>\n        <DataGrid\n          aria-label=\"Header Filters Example\"\n          className={filters.enabled ? filterContainerClassname : undefined}\n          columns={columns}\n          rows={filteredRows}\n          headerRowHeight={filters.enabled ? 70 : undefined}\n          direction={direction}\n          style={{\n            scrollbarGutter: 'stable'\n          }}\n        />\n      </FilterContext>\n      <datalist id=\"developers\">\n        {developerOptions.map(({ label, value }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nfunction FilterRenderer<R>({\n  tabIndex,\n  column,\n  children\n}: RenderHeaderCellProps<R> & {\n  children: (args: { tabIndex: number; filters: Filter }) => React.ReactElement;\n}) {\n  const filters = useContext(FilterContext)!;\n  return (\n    <>\n      <div>{column.name}</div>\n      {filters.enabled && <div>{children({ tabIndex, filters })}</div>}\n    </>\n  );\n}\n\nfunction createRows() {\n  const rows: Row[] = [];\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.floor(Math.random() * 4)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.floor(Math.random() * 4)],\n      developer: faker.person.fullName()\n    });\n  }\n  return rows;\n}\n"],"mappings":"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"}