{"version":3,"file":"HeaderFilters-C8e5UHx-.js","names":["createContext","useContext","useMemo","useState","faker","css","DataGrid","Column","RenderHeaderCellProps","Omit","useDirection","Route","rootClassname","toolbarClassname","filterColumnClassName","filterContainerClassname","filterClassname","Row","id","task","priority","issueType","developer","complete","Filter","enabled","FilterContext","undefined","inputStopPropagation","event","React","KeyboardEvent","HTMLInputElement","includes","key","stopPropagation","selectStopPropagation","HTMLSelectElement","FilterRenderer","tabIndex","column","children","R","args","filters","ReactElement","name","createRows","rows","i","push","Math","min","round","random","floor","person","fullName","SplitComponent","HeaderFilters","direction","setFilters","developerOptions","Array","from","Set","map","r","d","label","value","columns","width","headerCellClass","renderHeaderCell","p","rest","e","target","Number","isFinite","valueAsNumber","filteredRows","filter","toLowerCase","startsWith","clearFilters","toggleFilters","scrollbarGutter","component"],"sources":["../../website/routes/HeaderFilters.tsx?tsr-split=component"],"sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column, RenderHeaderCellProps } from '../../src';\nimport type { Omit } from '../../src/types';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: HeaderFilters\n});\n\nconst rootClassname = css`\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  gap: 10px;\n\n  > .rdg {\n    flex: 1;\n  }\n`;\n\nconst toolbarClassname = css`\n  text-align: end;\n`;\n\nconst filterColumnClassName = 'filter-cell';\n\nconst filterContainerClassname = css`\n  .${filterColumnClassName} {\n    line-height: 35px;\n    padding: 0;\n\n    > div {\n      padding-block: 0;\n      padding-inline: 8px;\n\n      &:first-child {\n        border-block-end: var(--rdg-border-width) solid var(--rdg-border-color);\n      }\n    }\n  }\n`;\n\nconst filterClassname = css`\n  inline-size: 100%;\n  padding: 4px;\n  font-size: 14px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  priority: string;\n  issueType: string;\n  developer: string;\n  complete: number;\n}\n\ninterface Filter extends Omit<Row, 'id' | 'complete'> {\n  complete: number | undefined;\n  enabled: boolean;\n}\n\n// Context is needed to read filter values otherwise columns are\n// re-created when filters are changed and filter loses focus\nconst FilterContext = createContext<Filter | undefined>(undefined);\n\nfunction inputStopPropagation(event: React.KeyboardEvent<HTMLInputElement>) {\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction selectStopPropagation(event: React.KeyboardEvent<HTMLSelectElement>) {\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction HeaderFilters() {\n  const direction = useDirection();\n  const [rows] = useState(createRows);\n  const [filters, setFilters] = useState(\n    (): Filter => ({\n      task: '',\n      priority: 'Critical',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    })\n  );\n\n  const developerOptions = useMemo(\n    () =>\n      Array.from(new Set(rows.map((r) => r.developer))).map((d) => ({\n        label: d,\n        value: d\n      })),\n    [rows]\n  );\n\n  const columns = useMemo((): readonly Column<Row>[] => {\n    return [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 50\n      },\n      {\n        key: 'task',\n        name: 'Title',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.task}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    task: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'priority',\n        name: 'Priority',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.priority}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    priority: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Critical\">Critical</option>\n                <option value=\"High\">High</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Low\">Low</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'issueType',\n        name: 'Issue Type',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.issueType}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    issueType: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Bug\">Bug</option>\n                <option value=\"Improvement\">Improvement</option>\n                <option value=\"Epic\">Epic</option>\n                <option value=\"Story\">Story</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'developer',\n        name: 'Developer',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.developer}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    developer: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n                list=\"developers\"\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'complete',\n        name: '% Complete',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                type=\"number\"\n                className={filterClassname}\n                value={filters.complete}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    complete: Number.isFinite(e.target.valueAsNumber)\n                      ? e.target.valueAsNumber\n                      : undefined\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      }\n    ];\n  }, []);\n\n  const filteredRows = useMemo(() => {\n    return rows.filter((r) => {\n      return (\n        (filters.task ? r.task.includes(filters.task) : true) &&\n        (filters.priority !== 'All' ? r.priority === filters.priority : true) &&\n        (filters.issueType !== 'All' ? r.issueType === filters.issueType : true) &&\n        (filters.developer\n          ? r.developer.toLowerCase().startsWith(filters.developer.toLowerCase())\n          : true) &&\n        (filters.complete !== undefined ? r.complete >= filters.complete : true)\n      );\n    });\n  }, [rows, filters]);\n\n  function clearFilters() {\n    setFilters({\n      task: '',\n      priority: 'All',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    });\n  }\n\n  function toggleFilters() {\n    setFilters((filters) => ({\n      ...filters,\n      enabled: !filters.enabled\n    }));\n  }\n\n  return (\n    <div className={rootClassname}>\n      <div className={toolbarClassname}>\n        <button type=\"button\" onClick={toggleFilters}>\n          Toggle Filters\n        </button>{' '}\n        <button type=\"button\" onClick={clearFilters}>\n          Clear Filters\n        </button>\n      </div>\n      <FilterContext value={filters}>\n        <DataGrid\n          aria-label=\"Header Filters Example\"\n          className={filters.enabled ? filterContainerClassname : undefined}\n          columns={columns}\n          rows={filteredRows}\n          headerRowHeight={filters.enabled ? 70 : undefined}\n          direction={direction}\n          style={{\n            scrollbarGutter: 'stable'\n          }}\n        />\n      </FilterContext>\n      <datalist id=\"developers\">\n        {developerOptions.map(({ label, value }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nfunction FilterRenderer<R>({\n  tabIndex,\n  column,\n  children\n}: RenderHeaderCellProps<R> & {\n  children: (args: { tabIndex: number; filters: Filter }) => React.ReactElement;\n}) {\n  const filters = useContext(FilterContext)!;\n  return (\n    <>\n      <div>{column.name}</div>\n      {filters.enabled && <div>{children({ tabIndex, filters })}</div>}\n    </>\n  );\n}\n\nfunction createRows() {\n  const rows: Row[] = [];\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.floor(Math.random() * 4)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.floor(Math.random() * 4)],\n      developer: faker.person.fullName()\n    });\n  }\n  return rows;\n}\n"],"mappings":"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"}