{"version":3,"file":"ContextMenu-lyxBIk8B.js","sources":["../../website/routes/ContextMenu.tsx?tsr-split=component"],"sourcesContent":["import { useLayoutEffect, useReducer, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { faker } from '@faker-js/faker';\nimport { createFileRoute } from '@tanstack/react-router';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column } from '../../src';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute('/ContextMenu')({\n  component: ContextMenuDemo\n});\n\nconst contextMenuClassname = css`\n  position: absolute;\n  background-color: #ffffff;\n  border: 1px solid black;\n  padding: 16px;\n  list-style: none;\n\n  > li {\n    padding: 8px;\n  }\n`;\n\ninterface Row {\n  id: number;\n  product: string;\n  price: string;\n}\n\nfunction createRows(): Row[] {\n  const rows: Row[] = [];\n\n  for (let i = 1; i < 1000; i++) {\n    rows.push({\n      id: i,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    });\n  }\n\n  return rows;\n}\n\nconst columns: readonly Column<Row>[] = [\n  { key: 'id', name: 'ID' },\n  { key: 'product', name: 'Product' },\n  { key: 'price', name: 'Price' }\n];\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\nfunction ContextMenuDemo() {\n  const direction = useDirection();\n  const [rows, setRows] = useState(createRows);\n  const [nextId, setNextId] = useReducer((id: number) => id + 1, rows[rows.length - 1].id + 1);\n  const [contextMenuProps, setContextMenuProps] = useState<{\n    rowIdx: number;\n    top: number;\n    left: number;\n  } | null>(null);\n  const menuRef = useRef<HTMLMenuElement>(null);\n  const isContextMenuOpen = contextMenuProps !== null;\n\n  useLayoutEffect(() => {\n    if (!isContextMenuOpen) return;\n\n    function onClick(event: MouseEvent) {\n      if (event.target instanceof Node && menuRef.current?.contains(event.target)) {\n        return;\n      }\n      setContextMenuProps(null);\n    }\n\n    addEventListener('click', onClick);\n\n    return () => {\n      removeEventListener('click', onClick);\n    };\n  }, [isContextMenuOpen]);\n\n  function insertRow(insertRowIdx: number) {\n    const newRow: Row = {\n      id: nextId,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    };\n\n    setRows([...rows.slice(0, insertRowIdx), newRow, ...rows.slice(insertRowIdx)]);\n    setNextId();\n  }\n\n  return (\n    <>\n      <DataGrid\n        rowKeyGetter={rowKeyGetter}\n        columns={columns}\n        rows={rows}\n        className=\"fill-grid\"\n        direction={direction}\n        onCellContextMenu={({ row }, event) => {\n          event.preventGridDefault();\n          // Do not show the default context menu\n          event.preventDefault();\n          setContextMenuProps({\n            rowIdx: rows.indexOf(row),\n            top: event.clientY,\n            left: event.clientX\n          });\n        }}\n      />\n      {isContextMenuOpen &&\n        createPortal(\n          <menu\n            ref={menuRef}\n            className={contextMenuClassname}\n            style={\n              {\n                top: contextMenuProps.top,\n                left: contextMenuProps.left\n              } as unknown as React.CSSProperties\n            }\n          >\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const { rowIdx } = contextMenuProps;\n                  setRows([...rows.slice(0, rowIdx), ...rows.slice(rowIdx + 1)]);\n                  setContextMenuProps(null);\n                }}\n              >\n                Delete Row\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const { rowIdx } = contextMenuProps;\n                  insertRow(rowIdx);\n                  setContextMenuProps(null);\n                }}\n              >\n                Insert Row Above\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const { rowIdx } = contextMenuProps;\n                  insertRow(rowIdx + 1);\n                  setContextMenuProps(null);\n                }}\n              >\n                Insert Row Below\n              </button>\n            </li>\n          </menu>,\n          document.body\n        )}\n    </>\n  );\n}\n"],"names":["contextMenuClassname","css","createRows","rows","i","push","id","product","faker","commerce","productName","price","columns","key","name","rowKeyGetter","row","SplitComponent","direction","useDirection","setRows","useState","nextId","setNextId","useReducer","length","contextMenuProps","setContextMenuProps","menuRef","useRef","isContextMenuOpen","useLayoutEffect","onClick","event","target","Node","current","contains","addEventListener","removeEventListener","insertRow","insertRowIdx","newRow","slice","jsxs","Fragment","children","jsx","DataGrid","className","onCellContextMenu","preventGridDefault","preventDefault","rowIdx","indexOf","top","clientY","left","clientX","createPortal","ref","style","type","document","body"],"mappings":"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"}