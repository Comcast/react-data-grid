{"version":3,"file":"ContextMenu-CIIUjBFq.js","sources":["../../website/routes/ContextMenu.tsx?tsr-split=component"],"sourcesContent":["import { useLayoutEffect, useReducer, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { faker } from '@faker-js/faker';\nimport { css } from '@linaria/core';\n\nimport { DataGrid } from '../../src';\nimport type { Column } from '../../src';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createFileRoute({\n  component: ContextMenuDemo\n});\n\nconst contextMenuClassname = css`\n  position: absolute;\n  background-color: #ffffff;\n  border: 1px solid black;\n  padding: 16px;\n  list-style: none;\n\n  > li {\n    padding: 8px;\n  }\n`;\n\ninterface Row {\n  id: number;\n  product: string;\n  price: string;\n}\n\nfunction createRows(): readonly Row[] {\n  const rows: Row[] = [];\n\n  for (let i = 1; i < 1000; i++) {\n    rows.push({\n      id: i,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    });\n  }\n\n  return rows;\n}\n\nconst columns: readonly Column<Row>[] = [\n  { key: 'id', name: 'ID' },\n  { key: 'product', name: 'Product' },\n  { key: 'price', name: 'Price' }\n];\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\nfunction ContextMenuDemo() {\n  const direction = useDirection();\n  const [rows, setRows] = useState(createRows);\n  const [nextId, setNextId] = useReducer((id: number) => id + 1, rows[rows.length - 1].id + 1);\n  const [contextMenuProps, setContextMenuProps] = useState<{\n    rowIdx: number;\n    top: number;\n    left: number;\n  } | null>(null);\n  const menuRef = useRef<HTMLMenuElement>(null);\n  const isContextMenuOpen = contextMenuProps !== null;\n\n  useLayoutEffect(() => {\n    if (!isContextMenuOpen) return;\n\n    function onMouseDown(event: MouseEvent) {\n      if (event.target instanceof Node && menuRef.current?.contains(event.target)) {\n        return;\n      }\n      setContextMenuProps(null);\n    }\n\n    addEventListener('mousedown', onMouseDown);\n\n    return () => {\n      removeEventListener('mousedown', onMouseDown);\n    };\n  }, [isContextMenuOpen]);\n\n  function insertRow(insertRowIdx: number) {\n    const newRow: Row = {\n      id: nextId,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    };\n\n    setRows(rows.toSpliced(insertRowIdx, 0, newRow));\n    setNextId();\n  }\n\n  return (\n    <>\n      <DataGrid\n        aria-label=\"Context Menu Example\"\n        rowKeyGetter={rowKeyGetter}\n        columns={columns}\n        rows={rows}\n        className=\"fill-grid\"\n        direction={direction}\n        onCellContextMenu={({ row }, event) => {\n          event.preventGridDefault();\n          // Do not show the default context menu\n          event.preventDefault();\n          setContextMenuProps({\n            rowIdx: rows.indexOf(row),\n            top: event.clientY,\n            left: event.clientX\n          });\n        }}\n      />\n      {isContextMenuOpen &&\n        createPortal(\n          <menu\n            ref={menuRef}\n            className={contextMenuClassname}\n            style={{\n              top: contextMenuProps.top,\n              left: contextMenuProps.left\n            }}\n          >\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setRows(rows.toSpliced(contextMenuProps.rowIdx, 1));\n                  setContextMenuProps(null);\n                }}\n              >\n                Delete Row\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const { rowIdx } = contextMenuProps;\n                  insertRow(rowIdx);\n                  setContextMenuProps(null);\n                }}\n              >\n                Insert Row Above\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const { rowIdx } = contextMenuProps;\n                  insertRow(rowIdx + 1);\n                  setContextMenuProps(null);\n                }}\n              >\n                Insert Row Below\n              </button>\n            </li>\n          </menu>,\n          document.body\n        )}\n    </>\n  );\n}\n"],"names":["contextMenuClassname","createRows","rows","i","push","id","product","faker","commerce","productName","price","columns","key","name","rowKeyGetter","row","SplitComponent","direction","useDirection","setRows","useState","nextId","setNextId","useReducer","length","contextMenuProps","setContextMenuProps","menuRef","useRef","isContextMenuOpen","useLayoutEffect","onMouseDown","event","target","Node","current","contains","addEventListener","removeEventListener","insertRow","insertRowIdx","newRow","toSpliced","jsxs","Fragment","children","jsx","DataGrid","className","onCellContextMenu","preventGridDefault","preventDefault","rowIdx","indexOf","top","clientY","left","clientX","createPortal","ref","style","type","onClick","document","body"],"mappings":"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"}